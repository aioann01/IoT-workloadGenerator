{
	"configs": {
		"protocol": "HTTP",

		"httpConfigs": {
			"requestURI": "testing",
			"httpServers": [{
				"serverIp": "http-server",
				"serverPort": "8095"
			}]
		},

		"sensorDataConfigs": {
			"sensorPrototypes": [{
					"datasetSensorPrototype": {
						"exportGenerationRate": "true",

						"sensorPrototypeName": "taxi",
						"messageExportType": "json",
						"timestampFormat": "yyyy-MM-dd HH:mm:ss",
						"timestampedDataset": "true",
						"sortedDataset": "false",
						"datasetFile": "taxi.csv",
						"timestampColumnName": "tpep_pickup_datetime",
						"generationRate": {
							"constant": {
								"value": 2
							}
						},
						"sensorIdColumnName": "VendorID",
						"messagePrototype": {
							"type": "json",
							"fieldsPrototypes": [{
								"name": "BusDriverAge",
								"type": "integer",
								"value": {
									"random": {
										"minValue": 30.0,
										"maxValue": 50.0
									}

								},
								"unit": "years old"
							}]

						}
					}
				},

				{
					"datasetSensorPrototype": {
						"exportGenerationRate": "true",

						"sensorPrototypeName": "dataTraffic",
						"messageExportType": "xml",
						"timestampFormat": "yyyy-MM-dd'T'HH:mm:ss",
						"timestampedDataset": "true",
						"sortedDataset": "true",
						"datasetFile": "trafficData158324.csv",
						"timestampColumnName": "TIMESTAMP",
						"sensorIdColumnName": "_id"
					}

				},
				{
					"datasetSensorPrototype": {
						"exportGenerationRate": "true",

						"sensorPrototypeName": "panel",
						"messageExportType": "json",
						"timestampedDataset": "false",
						"datasetFile": "pvwatts_hourly_cy.csv",
						"generationRate": {
							"constant": {
								"value": 2
							}
						},
						"messagePrototype": {
							"type": "json"

						}
					}
				},

				{
					"mockSensorPrototype": {
						"outputFile": "proximity_output.csv",
						"evaluateFieldGenerationRate": true,
						"description": "Sensor that calculates the proximity within the target to detect if an object is in the way",
						"sensorPrototypeName": "proximity_sensor",
						"sensorsQuantity": 3,
						"generationRate": {
							"constant": {
								"value": 5
							}
						},
						"messagePrototype": {
							"type": "xml",
							"fieldsPrototypes": [{
									"name": "distance",
									"type": "double",
									"value": {
										"distributions": [{
												"minValue": 0,
												"maxValue": 2.0,
												"probability": 0.05
											},
											{
												"minValue": 2.0,
												"maxValue": 5.0,
												"probability": 0.25
											},
											{
												"minValue": 5.0,
												"maxValue": 10.0,
												"probability": 0.7
											}
										]
									},
									"unit": "m"
								},
								{
									"name": "complexSensor",
									"type": "object",
									"value": [{
											"name": "field1",
											"type": "boolean",
											"value": {
												"distributions": [{
														"value": true,
														"probability": 0.1
													},
													{
														"value": false,
														"probability": 0.9
													}
												]
											}
										},
										{
											"name": "field2",
											"type": "object",
											"value": [{
													"name": "field2_1",
													"type": "double",
													"value": {
														"normalDistribution": {
															"mean": 20.0,
															"deviation": 5.0
														}
													},
													"unit": "%"
												},
												{
													"name": "field2_2",
													"type": "integer",
													"value": {
														"distributions": [{
																"minValue": 10,
																"maxValue": 20,
																"probability": 0.3
															},
															{
																"minValue": 20,
																"maxValue": 30,
																"probability": 0.5
															},
															{
																"minValue": 30,
																"maxValue": 40,
																"probability": 0.2
															}
														]
													},
													"unit": "degrees celcium"
												},
												{
													"name": "field2_3",
													"type": "double",
													"value": {
														"random": {
															"minValue": 10.0,
															"maxValue": 20.0
														}
													},
													"unit": "pa"
												},
												{
													"name": "field2_4",
													"type": "double",
													"value": {
														"constant": {
															"value": 2.5
														}
													}
												}
											]
										}
									]
								}
							]
						}
					}
				},
				{
					"mockSensorPrototype": {
						"outputFile": "motion_detection_output.csv",
						"evaluateFieldGenerationRate": true,
						"sensorPrototypeName": "motion_detection_sensor",
						"description": "Sensor that detects  movement and return true if motion or false if no motion",
						"sensorsQuantity": 1,
						"generationRate": {
							"constant": {
								"value": 5
							}
						},
						"messagePrototype": {
							"type": "json",
							"fieldsPrototypes": [{
								"name": "movement",
								"type": "boolean",
								"value": {
									"distributions": [{
											"value": true,
											"probability": 0.1
										},
										{
											"value": false,
											"probability": 0.9
										}
									]
								}
							}]
						}
					}
				},
				{
					"mockSensorPrototype": {
						"outputFile": "humidity_output.csv",
						"evaluateFieldGenerationRate": true,
						"sensorPrototypeName": "humidity_sensor",
						"sensorsQuantity": 2,
						"generationRate": {
							"constant": {
								"value": 1
							}
						},
						"messagePrototype": {
							"type": "xml",
							"fieldsPrototypes": [{
								"name": "humidity",
								"type": "double",
								"value": {
									"normalDistribution": {
										"mean": 20.0,
										"deviation": 5.0
									}
								},
								"unit": "%"
							}]
						}
					}
				},
				{
					"mockSensorPrototype": {
						"outputFile": "temperature_output.csv",
						"evaluateFieldGenerationRate": true,
						"sensorPrototypeName": "temperature_sensor",
						"sensorsQuantity": 1000,
						"generationRate": {
							"constant": {
								"value": 3
							}
						},
						"messagePrototype": {
							"type": "xml",
							"fieldsPrototypes": [{
								"name": "temperature",
								"type": "integer",
								"value": {
									"distributions": [{
											"minValue": 10,
											"maxValue": 20,
											"probability": 0.3
										},
										{
											"minValue": 20,
											"maxValue": 30,
											"probability": 0.5
										},
										{
											"minValue": 30,
											"maxValue": 40,
											"probability": 0.2
										}
									]
								},
								"unit": "degrees celcium"
							}]
						}
					}
				},
				{
					"mockSensorPrototype": {
						"outputFile": "pressure_output.csv",
						"evaluateFieldGenerationRate": true,
						"sensorPrototypeName": "pressure_sensor",
						"sensorsQuantity": 1,
						"generationRate": {
							"constant": {
								"value": 20
							}
						},
						"messagePrototype": {
							"fieldsPrototypes": [{
								"name": "pressure",
								"type": "double",
								"value": {
									"random": {
										"minValue": 10.0,
										"maxValue": 20.0
									}
								},
								"unit": "pa"
							}]
						}
					}
				},
				{
					"mockSensorPrototype":

					{
						"description": "Dummy device",
						"sensorPrototypeName": "dummy_sensor",
						"sensorsQuantity": 3,
						"generationRate": {
							"constant": {
								"value": 2
							}
						},
						"messagePrototype": {
							"type": "json",
							"fieldsPrototypes": [{
									"name": "distance",
									"type": "double",
									"value": {
										"distributions": [{
												"minValue": 0,
												"maxValue": 2,
												"probability": 0.05
											},
											{
												"minValue": 2,
												"maxValue": 5,
												"probability": 0.25
											},
											{
												"minValue": 5,
												"maxValue": 10,
												"probability": 0.7
											}
										]
									},
									"unit": "m"
								},
								{
									"name": "Name",
									"type": "integer",
									"value": {
										"constant": {
											"value": 5
										}
									}
								},
								{
									"name": "Name",
									"type": "integer",
									"value": {
										"random": {
											"minValue": 10,
											"maxValue": 20
										}
									}
								},
								{
									"name": "dummyComplexSensor",
									"type": "object",
									"value": [{
											"name": "dummy_field",
											"type": "boolean",
											"value": {
												"distributions": [{
														"value": true,
														"probability": 0.1
													},
													{
														"value": false,
														"probability": 0.9
													}
												]
											}
										},


										{
											"name": "dummy_field2",
											"type": "object",
											"value": [{
													"name": "dummy_field2_1",
													"type": "double",
													"value": {
														"normalDistribution": {
															"mean": 20.0,
															"deviation": 5.0
														}
													},
													"unit": "%"
												},
												{
													"name": "dummy_field2_2",
													"type": "integer",
													"value": {
														"distributions": [{
																"minValue": 10,
																"maxValue": 20,
																"probability": 0.3
															},
															{


																"minValue": 20,
																"maxValue": 30,
																"probability": 0.5
															},
															{
																"minValue": 30,
																"maxValue": 40,
																"probability": 0.2
															}
														]
													},
													"unit": "degrees celcium"
												},
												{
													"name": "dummy_field2_3",
													"type": "double",
													"value": {
														"random": {
															"minValue": 10.0,
															"maxValue": 20.0
														}
													},
													"unit": "pa"
												},
												{
													"name": "dummy_field2_4",
													"type": "string",
													"value": {
														"constant": {
															"value": "Dummy"
														}
													}
												}
											]
										}
									]
								}
							]
						}
					}
				}


			]
		}

	}
}